title: "Ready Meal Classification"
description: "Text Classification for the Ready Meal Swapping App"

# Reference via ${vars.var_name}
vars:
  name: "textcat_simple"
  lang: "en"
  gpu_id: -1
  version: "2.0.0"
  train: "train.json"
  dev: "dev.json"
  config: "config.cfg"

directories: ["assets", "corpus", "configs", "training", "scripts", "packages"]

assets:
  - dest: "assets/train.json"
    description: "Training data"
  - dest: "assets/dev.json"
    description: "Development data"

# Run via "spacy project run [workflow]"
workflows:
  all:
    - convert
    - debug
    - train
    - evaluate
    - package

# Run via "spacy project run [command]"
commands:
  - name: convert
    help: "Convert files into spacy binary training data format"
    script:
      - "python -m spacy convert assets/${vars.train} corpus"
      - "python -m spacy convert assets/${vars.dev} corpus"
    deps:
      - "assets/${vars.train}"
      - "assets/${vars.dev}"
    outputs:
      - "corpus/train.spacy"
      - "corpus/dev.spacy"

  - name: debug
    help: "Analyze, debug and validate training and development data"
    script:
      - "python -m spacy debug data configs/${vars.config} --paths.train corpus/train.spacy --paths.dev corpus/dev.spacy"
    deps:
      - "configs/${vars.config}"

  - name: train
    help: "Train model"
    script:
      - "python -m spacy train configs/${vars.config} --output training/ --paths.train corpus/train.spacy --paths.dev corpus/dev.spacy --gpu-id ${vars.gpu_id}"
    deps:
      - "configs/${vars.config}"
      - "corpus/train.spacy"
      - "corpus/dev.spacy"
    outputs:
      - "training/model-best"

  - name: evaluate
    help: "Evaluate the model and export metrics"
    script:
      - "python -m spacy evaluate training/model-best corpus/dev.spacy --output training/metrics.json"
    deps:
      - "corpus/dev.spacy"
      - "training/model-best"
    outputs:
      - "training/metrics.json"

  - name: package
    help: "Package the trained model as a pip package"
    script:
      - "python -m spacy package training/model-best packages --name ${vars.name} --version ${vars.version} --force"
    deps:
      - "training/model-best"
    outputs_no_cache:
      - "packages/${vars.lang}_${vars.name}-${vars.version}/dist/${vars.lang}_${vars.name}-${vars.version}.tar.gz"